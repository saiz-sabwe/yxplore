"""
Django settings for YXPLORE_NODE project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ue)mj8$vx6@4jz%g^zl429jo9mz%0i%2c276b0^1jw(n+hn$bu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

FIRST_APPS = [
    'jet.dashboard',
    'jet',
    "daphne",
]


DEFAULT_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

]


THIRD_APPS = [

    'import_export',
    'rest_framework',
    'rest_framework.authtoken',
    'django_celery_beat',
    'django_celery_results',
    'pwa',

]

LOCAL_APPS = [
    'ModuleFlight',
    'ModuleHotel',
    'ModuleCar',
    'ModuleProfils',
    'ModulePayments',
    'ModuleKernel',
]


INSTALLED_APPS = FIRST_APPS + DEFAULT_APPS + THIRD_APPS + LOCAL_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'YXPLORE_NODE.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'YXPLORE_NODE.wsgi.application'
ASGI_APPLICATION = 'YXPLORE_NODE.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'yxplore_db',
        'USER': 'yxplore_user',
        'PASSWORD': 'yxplore_pass',
        'HOST': 'pgsql',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'fr-fr'

TIME_ZONE = 'Africa/Kinshasa'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

LOGIN_URL = '/profils/login/'          # nom de l'URL ou chemin absolu
LOGIN_REDIRECT_URL = '/flights/'            # où envoyer après login
LOGOUT_REDIRECT_URL = '/profils/login/'

STATIC_URL = 'static/'
PROJECT_ROOT = Path(__file__).resolve().parent
STATIC_ROOT= Path(BASE_DIR) / 'staticfiles'
STATIC_TMP = Path(BASE_DIR) / 'static'
STATICFILES_DIRS=[
    BASE_DIR / 'static',
]

STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

MEDIA_ROOT = Path(BASE_DIR) /'media'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ===== CONFIGURATION API DUFFEL v2 =====
DUFFEL_API_KEY = 'duffel_test_vgVEWNUb3JHRDAIcLsYXoFQsEV7qMRPbFCx-XSL-CX_'  # Token de test
DUFFEL_API_KEY_LIVE = None  # Token de production (à configurer)
DUFFEL_BASE_URL = 'https://api.duffel.com/air'
DUFFEL_API_VERSION = 'v2'

# Mode de fonctionnement Duffel
DUFFEL_LIVE_MODE = False  # False = test, True = production

# Configuration des timeouts et rate limits
DUFFEL_CONFIG = {
    'REQUEST_TIMEOUT': 30,  # Timeout des requêtes en secondes
    'RATE_LIMIT_PER_MINUTE': 60,  # Limite de requêtes par minute
    'OFFER_CACHE_TTL': 900,  # Cache des offres en secondes (15 min)
    'MAX_RETRIES': 3,  # Nombre de tentatives en cas d'échec
    'RETRY_DELAY': 1,  # Délai entre les tentatives en secondes
}

# Types de paiement supportés par Duffel
DUFFEL_PAYMENT_TYPES = {
    'BALANCE': 'balance',  # Paiement par solde (défaut)
    'ARC_BSP_CASH': 'arc_bsp_cash',  # Pour agents IATA
}

# Configuration spécifique au module Flight
FLIGHT_CONFIG = {
    'DEFAULT_COMMISSION_RATE': 5.0,  # Taux de commission par défaut en %
    'MAX_PASSENGERS_PER_BOOKING': 9,  # Limite Duffel
    'BOOKING_EXPIRY_HOURS': 24,  # Expiration des réservations en heures
    'CURRENCY_DEFAULT': 'EUR',
    'SEARCH_RESULTS_LIMIT': 50,
    'OFFER_EXPIRY_BUFFER': 300,  # Buffer avant expiration offre (5 min)
    'AUTO_CONFIRM_BOOKINGS': True,  # Confirmation automatique des réservations
    'CACHE_SEARCH_RESULTS': True,  # Cache des résultats de recherche
    
    # Classes de cabine supportées par Duffel
    'CABIN_CLASSES': {
        'economy': 'economy',
        'premium_economy': 'premium_economy', 
        'business': 'business',
        'first': 'first'
    },
    
    # Types de passagers Duffel
    'PASSENGER_TYPES': {
        'adult': 'adult',
        'child': 'child',
        'infant_without_seat': 'infant_without_seat'
    }
}

# Configuration des logs pour le module Flight
import os
LOGS_DIR = BASE_DIR / 'logs'
if not LOGS_DIR.exists():
    LOGS_DIR.mkdir(exist_ok=True)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'ModuleFlight': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}
